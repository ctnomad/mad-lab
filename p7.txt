Program 7
Design an android app to fetch the JSON data from the internet and display the data using listView.
c. Employee data is stored in the internet. (use Async Task)
d. When app sends the request to the server, the server should provide data in json format.
e. The client app should fetch this data and display using listview.
https://raw.githubusercontent.com/brai0/android7/main/contacts.json

MainActivity.java
package com.example.seventhprogram;

public class MainActivity extends AppCompatActivity {
    Button b;
    ListView lv;
    ArrayList<HashMap<String, String>> contactList;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        contactList = new ArrayList<>();
        lv = (ListView) findViewById(R.id.list);
        b = (Button) findViewById(R.id.fetch);
        b.setOnClickListener(view -> {
            try {
                Log.d("Button click", "btnFetch");
                String strUrl = "https://raw.githubusercontent.com/brai0/android7/main/contacts.json";
                new UrlHandler().execute(strUrl);
            } catch (Exception e) {
                Log.d("btnError", "Cannot resolve");
            }
        });

    }

    public class UrlHandler extends AsyncTask<String, Integer, String> {
        @Override
        protected void onPostExecute(String s) {
            super.onPostExecute(s);
            ListAdapter adapter = new SimpleAdapter(MainActivity.this, contactList,
                    R.layout.list_item, new String[]{"id", "name", "email"},
                    new int[]{R.id.cid, R.id.cname, R.id.cemail});
            lv.setAdapter(adapter);
        }

        @Override
        protected String doInBackground(String... params) {
            String json_response;
            try {
                URL url = new URL(params[0]);
                HttpURLConnection connection = (HttpURLConnection) url.openConnection();
                connection.setRequestMethod("GET");
                connection.connect();
                InputStream in = new BufferedInputStream(connection.getInputStream());
                json_response = convertStreamToString(in);

                try {
                    JSONObject jsonObj = new JSONObject(json_response);
                    // Getting JSON Array node
                    JSONArray contacts = jsonObj.getJSONArray("contacts");
                    // looping through All Contacts
                    for (int i = 0; i < contacts.length(); i++) {
                        JSONObject c = contacts.getJSONObject(i);
                        String id = c.getString("id");
                        String name = c.getString("name");
                        String email = c.getString("email");
                        // tmp hash map for single contact
                        HashMap<String, String> contact = new HashMap<>();
                        // adding each child node to HashMap key => value
                        contact.put("id", id);
                        contact.put("name", name);
                        contact.put("email", email);
                        // adding contact to contact list
                        contactList.add(contact);
                    }
                } catch (JSONException e) {
                    Log.e("error", "Json parsing error: " + e.getMessage());
                }

            } catch (MalformedURLException e) {
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return null;
        }

        private String convertStreamToString(InputStream is) {
            BufferedReader reader = new BufferedReader(new InputStreamReader(is));
            StringBuilder sb = new StringBuilder();
            String line;
            try {
                while ((line = reader.readLine()) != null) {
                    sb.append(line).append('\n');
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
            return sb.toString();
        }
    }
}


activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    tools:context="com.example.seventhprogram.MainActivity">
    <Button
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Fetch Data"
        android:id="@+id/fetch"
        />
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/textView"
        />
    <ListView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/list"
        ></ListView>
</LinearLayout>


list_item.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical" android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:paddingLeft="75dp"
    android:paddingBottom="25dp"
    >
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/cid"
        android:paddingVertical="10dp"
        android:paddingTop="10dp"
        />
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/cname"
        android:paddingVertical="10dp"
        />
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/cemail"
        android:paddingVertical="10dp"
        />
</LinearLayout>


AndroidManifest.xml
<uses-permission android:name="android.permission.INTERNET"></uses-permission>
