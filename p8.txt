Program 8
Develop an android app on Google Map, and should provide following functions. 
a. How to incorporate Google Maps into an application.
b. How to register for and receive GPS location information.
c. How to create Google Maps Overlays.
d. Accept city name from the user and marks it on map.
e. Explore features like Zoom and map types.

MapsActivity.java

package com.example.eighthprogram;

public class MapsActivity extends FragmentActivity implements OnMapReadyCallback {

    private GoogleMap mMap;
    private ActivityMapsBinding binding;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        binding = ActivityMapsBinding.inflate(getLayoutInflater());
        setContentView(binding.getRoot());

        // Obtain the SupportMapFragment and get notified when the map is ready to be used.
        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()
                .findFragmentById(R.id.map);
        mapFragment.getMapAsync(this);
    }

    /**
     * Manipulates the map once available.
     * This callback is triggered when the map is ready to be used.
     * This is where we can add markers or lines, add listeners or move the camera. In this case,
     * we just add a marker near Sydney, Australia.
     * If Google Play services is not installed on the device, the user will be prompted to install
     * it inside the SupportMapFragment. This method will only be triggered once the user has
     * installed Google Play services and returned to the app.
     */
    @Override
    public void onMapReady(GoogleMap googleMap) {
        mMap = googleMap;

        // Add a marker in bengaluru and move the camera
        LatLng bengaluru = new LatLng(13.1309774,77.5897552);
        mMap.addMarker(new MarkerOptions().position(bengaluru).title("Marker in Sydney"));
        mMap.moveCamera(CameraUpdateFactory.newLatLng(bengaluru));
    }

    public void setmMap(GoogleMap mMap) {
        this.mMap = mMap;
    }

    public void onSearch(View view) {
        List<Address> addressList = null;
        EditText et_location = (EditText) findViewById(R.id.et1);
        String location = et_location.getText().toString();
        if (location != null || location.equals("")) {
            Geocoder geocoder = new Geocoder(this);
            try {
                addressList = geocoder.getFromLocationName(location, 1);
            } catch (IOException e) {
                e.printStackTrace();
            }
            Address address = addressList.get(0);
            LatLng latLng = new LatLng(address.getLatitude(), address.getLongitude());
            mMap.addMarker(new MarkerOptions().position(latLng).title(location));
            mMap.animateCamera(CameraUpdateFactory.newLatLng(latLng));
        }
    }

    public void onType(View view) {
        if (mMap.getMapType() == GoogleMap.MAP_TYPE_NORMAL) {
            mMap.setMapType(GoogleMap.MAP_TYPE_SATELLITE);
        } else {
            mMap.setMapType(GoogleMap.MAP_TYPE_NORMAL);
        }
    }

    public void onZoom(View view) {
        if (view.getId() == R.id.zoomin) {
            mMap.animateCamera(CameraUpdateFactory.zoomIn());
        }
        if (view.getId() == R.id.zoomout) {
            mMap.animateCamera(CameraUpdateFactory.zoomOut());
        }

    }

}




activity_maps.xml
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android" android:layout_width="match_parent"
android:orientation="vertical" android:layout_height="400dp">
<LinearLayout
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:orientation="horizontal"
    android:id="@+id/ll1">

    <EditText
        android:id="@+id/et1"
        android:layout_width="196dp"
        android:layout_height="wrap_content" />

    <Button
        android:id="@+id/searchbut"
        android:layout_width="98dp"
        android:layout_height="wrap_content"
        android:onClick="onSearch"
        android:text="Search" />

    <Button
        android:id="@+id/typebut"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:onClick="onType"
        android:text="Type" />

</LinearLayout>
<LinearLayout
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:orientation="horizontal"
    android:layout_below="@id/ll1"
    android:id="@+id/linearLayout"
    android:layout_alignParentBottom="true">

    <fragment xmlns:android="http://schemas.android.com/apk/res/android"
        xmlns:tools="http://schemas.android.com/tools"
        android:id="@+id/map"
        android:layout_below="@id/ll1"
        android:name="com.google.android.gms.maps.SupportMapFragment"
        android:layout_width="343dp"
        android:layout_height="match_parent"
        tools:context=".MapsActivity" />

    <LinearLayout
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:orientation="vertical">

        <Button
            android:id="@+id/zoomin"
            android:layout_width="wrap_content"
            android:layout_height="69dp"
            android:onClick="onZoom"
            android:text="+" />

        <Button
            android:id="@+id/zoomout"
            android:layout_width="wrap_content"
            android:layout_height="68dp"
            android:onClick="onZoom"
            android:text="-" />
    </LinearLayout>
</LinearLayout>
</RelativeLayout>

AndroidManifest.xml

    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.INTERNET"/>
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="com.google.android.providers.gsf.permission.READ_GSERVICES" />



<!-- at the appropriate location â€”>
        <meta-data
            android:name="com.google.android.geo.API_KEY"
            android:value="${MAPS_API_KEY}" />
